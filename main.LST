C51 COMPILER V9.52.0.0   MAIN                                                              10/18/2018 17:40:31 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Program Files\C51\BIN\C51.EXE main.c LARGE BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include "config.h"
   2          
   3          void  delay_ms(u8 ms)
   4          {
   5   1        u16 i;
   6   1        do
   7   1        {
   8   2          i = MAIN_Fosc / 10000;
   9   2          while(--i)  ;
  10   2        }while(--ms);
  11   1      }
  12          
  13          void TIM_config(void)
  14          {
  15   1        TIM_InitTypeDef   TIM_InitStructure;          //结构定义
  16   1        TIM_InitStructure.TIM_Mode      = TIM_16BitAutoReload;  //指定工作模式,   TIM_16BitAutoReload,TIM_16Bit,TI
             -M_8BitAutoReload,TIM_16BitAutoReloadNoMask
  17   1        TIM_InitStructure.TIM_Polity    = PolityLow;      //指定中断优先级, PolityHigh,PolityLow
  18   1        TIM_InitStructure.TIM_Interrupt = ENABLE;       //中断是否允许,   ENABLE或DISABLE
  19   1        TIM_InitStructure.TIM_ClkOut    = ENABLE;       //是否输出高速脉冲, ENABLE或DISABLE
  20   1        TIM_InitStructure.TIM_ValueMode = SYS_CLOCK;      //初值模式, TIME_us: 重装值为时间, 单位为us.   SYS_CLOCK: 
             -重装值为系统时钟数. COUNTER: 对外计数初值(固定为1T模式).
  21   1        TIM_InitStructure.TIM_Value     = MAIN_Fosc / 1000; //重装值或初值,
  22   1        TIM_InitStructure.TIM_Run       = ENABLE;       //是否初始化后启动定时器, ENABLE或DISABLE
  23   1        Timer_Inilize(Timer0,&TIM_InitStructure);       //初始化Timer0    Timer0,Timer1,Timer2,Timer3,Timer4  
  24   1        Timer_Inilize(Timer1,&TIM_InitStructure);
  25   1      }
  26          
  27          void  UART_config(void)
  28          {
  29   1        COMx_InitDefine   COMx_InitStructure;         //结构定义
  30   1        COMx_InitStructure.UART_Mode      = UART_8bit_BRTx;   //模式,       UART_ShiftRight,UART_8bit_BRTx,UART_9b
             -it,UART_9bit_BRTx
  31   1        COMx_InitStructure.UART_BRT_Use   = BRT_Timer2;     //使用波特率,   BRT_Timer1, BRT_Timer2 (注意: 串口2固定
             -使用BRT_Timer2)
  32   1        COMx_InitStructure.UART_BaudRate  = 115200ul;     //波特率, 一般 110 ~ 115200
  33   1        COMx_InitStructure.UART_RxEnable  = ENABLE;       //接收允许,   ENABLE或DISABLE
  34   1        COMx_InitStructure.BaudRateDouble = DISABLE;      //波特率加倍, ENABLE或DISABLE
  35   1        COMx_InitStructure.UART_Interrupt = ENABLE;       //中断允许,   ENABLE或DISABLE
  36   1        COMx_InitStructure.UART_Polity    = PolityLow;      //中断优先级, PolityLow,PolityHigh
  37   1        COMx_InitStructure.UART_P_SW      = UART1_SW_P30_P31; //切换端口,   UART1_SW_P30_P31,UART1_SW_P36_P37,UAR
             -T1_SW_P16_P17(必须使用内部时钟)
  38   1        COMx_InitStructure.UART_RXD_TXD_Short = DISABLE;    //内部短路RXD与TXD, 做中继, ENABLE,DISABLE
  39   1        USART_Configuration(USART1, &COMx_InitStructure);   //初始化串口1 USART1,USART2
  40   1      
  41   1        COMx_InitStructure.UART_Mode      = UART_8bit_BRTx;   //模式,       UART_ShiftRight,UART_8bit_BRTx,UART_9b
             -it,UART_9bit_BRTx
  42   1        COMx_InitStructure.UART_BaudRate  = 115200ul;     //波特率,     110 ~ 115200
  43   1        COMx_InitStructure.UART_RxEnable  = ENABLE;       //接收允许,   ENABLE或DISABLE
  44   1        COMx_InitStructure.UART_Interrupt = ENABLE;       //中断允许,   ENABLE或DISABLE
  45   1        COMx_InitStructure.UART_Polity    = PolityLow;      //中断优先级, PolityLow,PolityHigh
  46   1        COMx_InitStructure.UART_P_SW      = UART2_SW_P10_P11; //切换端口,   UART2_SW_P10_P11,UART2_SW_P46_P47
  47   1        USART_Configuration(USART2, &COMx_InitStructure);   //初始化串口2 USART1,USART2
  48   1      
  49   1      }
C51 COMPILER V9.52.0.0   MAIN                                                              10/18/2018 17:40:31 PAGE 2   

  50          
  51          void main(void)
  52          {
  53   1        u16 time_vc_test,time_gpio_test;
  54   1        u8 gpio_test_status = 0;
  55   1        ADC_Init();
  56   1        INA219_Init();
  57   1        TIM_config();
  58   1        UART_config();
  59   1        EA = 1;
  60   1        while(1)
  61   1        {
  62   2          if(get_mode(VC_TEST))
  63   2          {
  64   3            time_vc_test = get_time();
  65   3            ENABLE_ADC_Convert();
  66   3            delay_ms(100);
  67   3            while(get_mode(VC_TEST) || timeout_nms(3000,time_vc_test));       
  68   3          } 
  69   2          if(get_mode(GPIO_TEST))
  70   2          {
  71   3            time_gpio_test = get_time();
  72   3            while(!timeout_nms(3000,time_gpio_test))
  73   3            {
  74   4              if(get_mode(GPIO_NEXT))
  75   4              {
  76   5                switch (gpio_test_status)
  77   5                {
  78   6                  case TEST_GPIO_UP: GET_GPIO_Value();GPIO_Record_UP();break;
  79   6                
  80   6                  case TEST_GPIO_DOWN:GET_GPIO_Value();GPIO_Record_DOWN();break;
  81   6                
  82   6                  default:GET_GPIO_Value();GPIO_Record_WATER();break;
  83   6                }
  84   5                SET_GPIO_Next();
  85   5                reset_mode(GPIO_NEXT);
  86   5                gpio_test_status++;
  87   5              }
  88   4              
  89   4              if(get_mode(GPIO_END))
  90   4              {
  91   5                SEND_Hex_Record();
  92   5                reset_mode(GPIO_END);
  93   5                goto END;
  94   5              }
  95   4            }
  96   3          } 
  97   2        END:
  98   2          gpio_test_status = 0;
  99   2          delay_ms(1);
 100   2        }
 101   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    354    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      28
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
C51 COMPILER V9.52.0.0   MAIN                                                              10/18/2018 17:40:31 PAGE 3   

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
